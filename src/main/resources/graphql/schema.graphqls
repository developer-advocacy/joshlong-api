type Query {
    blogPosts: [BlogPost]
    search(query: String , offset: Int, pageSize: Int) : BlogPostSearchResults
    recentBlogPosts(offset: Int, pageSize: Int) : BlogPostSearchResults
    blogPostByPath (path: String) : BlogPost
    about: String
    abstracts: String
    appearances : [Appearance]
    podcasts : [Podcast]
    books: [Content]
    livelessons: [Content]
    latestSpringTipsEpisode : SpringTipsEpisode
    springTipsEpisodes : [SpringTipsEpisode]
}

type BlogPostSearchResults {
    totalResultsSize : Int
    offset : Int
    pageSize : Int
    posts : [BlogPost ]
}

type SpringTipsEpisode {
    blogUrl : String
    date : String
    seasonNumber : Int
    title : String
    youtubeEmbedUrl : String
    youtubeId : String
}

type Content {
    title: String
    imageUrl: String
    html: String
}

type IndexRebuildStatus  {
    entries : Int
    date : String
}

type Podcast {
    id: ID
    uid: ID
    title: String
    date: String
    episodePhotoUri: String
    episodeUri: String
    description: String
}


type BlogPost {
    title: String
    date : String
    published: Boolean
    originalContent : String
    processedContent: String
    type: BlogPostContentType
    path : String
    pathId: String
    images : [String]
    paragraphs: [String]
    heroParagraphs : String
    heroImage  : String
    heroParagraphsTruncated: Boolean
}

enum BlogPostContentType {
    HTML
    MD
} 


type Appearance {
    event : String
    startDate : String
    endDate : String
    time : String
    marketingBlurb: String
}

