name: Deploy

env:
  BLOG_INDEX_REBUILD_KEY: ${{ secrets.BLOG_INDEX_REBUILD_KEY }}

  SPRING_DATASOURCE_URL: jdbc:postgresql://${{secrets.JOSHLONG_DB_HOST}}/${{ secrets.JOSHLONG_DB_SCHEMA }}
  SPRING_DATASOURCE_PASSWORD: ${{ secrets.JOSHLONG_DB_PASSWORD }}
  SPRING_DATASOURCE_USERNAME: ${{ secrets.JOSHLONG_DB_USERNAME }}

  SPRING_RABBITMQ_HOST: ${{ secrets.TWITTER_SERVICE_RABBITMQ_HOST }}
  SPRING_RABBITMQ_PASSWORD: ${{ secrets.TWITTER_SERVICE_RABBITMQ_PASSWORD }}
  SPRING_RABBITMQ_PORT: ${{ secrets.TWITTER_SERVICE_RABBITMQ_PORT }}
  SPRING_RABBITMQ_USERNAME: ${{ secrets.TWITTER_SERVICE_RABBITMQ_USERNAME }}
  SPRING_RABBITMQ_VIRTUAL_HOST: ${{ secrets.TWITTER_SERVICE_RABBITMQ_VIRTUAL_HOST }}
  BOOTIFUL_PROMOTION_PLAYLIST_IDS: ${{ secrets.BOOTIFUL_PROMOTION_PLAYLIST_IDS }}
  BOOTIFUL_YOUTUBE_API_KEY: ${{ secrets.BOOTIFUL_YOUTUBE_API_KEY }}
  BOOTIFUL_TWITTER_CLIENT_ID: ${{ secrets.TWITTER_CLIENTS_YOUTUBE_CLIENT_ID }}
  BOOTIFUL_TWITTER_CLIENT_SECRET: ${{ secrets.TWITTER_CLIENTS_YOUTUBE_CLIENT_SECRET }}
  APP_NAME: joshlong-api
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER }}
  GCLOUD_ZONE: ${{ secrets.GCLOUD_ZONE }}
  NS_NAME: ${{ secrets.NS_NAME }}
  GCLOUD_SA_KEY: ${{ secrets.GCLOUD_SA_KEY }}
  GCLOUD_PROJECT: joshlong
on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    name: Setup and Deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: "Setup PATH"
        run: |
          P="${GITHUB_WORKSPACE}/bin"
          mkdir -p $P
          echo "${P}" >> $GITHUB_PATH

      - uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GCLOUD_SA_KEY }}"

      - id: "get-credentials"
        uses: "google-github-actions/get-gke-credentials@v2"
        with:
          cluster_name: "${{ env.GKE_CLUSTER  }}"
          location: "${{ env.GCLOUD_ZONE }}"

      - run: |
          gcloud config set project $GCLOUD_PROJECT
          gcloud --quiet auth configure-docker us-docker.pkg.dev
          kubectl get pods

      - uses: actions/setup-java@v4.3.0
        with:
          distribution: "adopt"
          java-version: 21

      - name: Deploy
        run: |
          kubectl get ns/$NS_NAME || kubectl create ns $NS_NAME
          kubectl config set-context --current --namespace=$NS_NAME
          kubectl config view --minify | grep namespace: && echo "found the namespace.."
          cd $GITHUB_WORKSPACE
          export ROOT_DIR=$GITHUB_WORKSPACE
          ./deploy/deploy.sh
